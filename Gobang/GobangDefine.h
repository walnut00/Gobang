#pragma once

#define UM_SHOW_MESSAGE WM_USER + 100

enum AZIMUTH_ANGLE 
{
	ANGLE_0, 
	ANGLE_45,
	ANGLE_90, 
	ANGLE_135,
	ANGLE_180,
	ANGLE_225,
	ANGLE_270,
	ANGLE_315,
	ANGLE_OTHERS = 0xFFFF
};

enum GAME_MODE
{
	MODE_SINGLE,
	MODE_SERVER,
	MODE_CLIENT,
	MODE_ERROR = 0xFFFF
};

enum GAME_RESULT { RESULT_WWIN, RESULT_BWIN, RESULT_WGIVEUP, RESULT_BGIVEUP, 
						RESULT_WESCAPE, RESULT_BESCAPE, RESULT_PEACE, 
						RESULT_INIT_FAIL, RESULT_BIND_FAIL, RESULT_LISTEN_FAIL, RESULT_CONNECT_FAIL, 
						RESULT_CREATE_FAIL, RESULT_SEND_FAIL, RESULT_RECEIVE_FAIL, 
						RESULT_CONFIG_ERROR, RESULT_RUNTIME_ERROR, 
						RESULT_NONE = 0xFFFF};
enum GAME_LEVEL 
{
	LEVEL_EASY,
	LEVEL_HARD,
	LEVEL_EXPERT,
	LEVEL_ERROR =  0xFFFF
};

enum SOCRE_LEVEL
{
	SOCRE_SINGLE_1 = 0, 
	SOCRE_SINGLE_2 = 3, 
	SOCRE_SINGLE_3 = 5, 
	SOCRE_SINGLE_4 = 500,
	SOCRE_DOUBLE_1 = 0, 
	SOCRE_DOUBLE_2 = 30, 
	SOCRE_DOUBLE_3 = 300, 
	SOCRE_DOUBLE_4 = 10000,
	SOCRE_WIN_5 = 100000,
	SOCRE_ERROR = 0
};

//连子数目
enum NUMBER_TYPE
{
	NT_UNKNOWN,
	NT_DEAD_1 = 0x01,	//死1
	NT_LIVE_1 = 0x02,	//活1
	NT_DEAD_2 = 0x04,	//死2
	NT_LIVE_2 = 0x08,	//活2
	NT_DEAD_3 = 0x10,	//死3
	NT_LIVE_3 = 0x20,	//活3
	NT_DEAD_4 = 0x40,	//死4
	NT_LIVE_4 = 0x80,	//活4
	NT_FIVE = 0xFF	//五连
};

bool GetLocalIP(DWORD * pnIP, CString * pstrIP); 
CString TransferIP(const DWORD & dwIPAddress);
DWORD TransferIP(const char * strIPAddress);